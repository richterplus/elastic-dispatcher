<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.richterplus.elastic.dispatcher.jdbc.mapper.ElasticDispatcherWorkerMapper">
    <resultMap type="com.github.richterplus.elastic.dispatcher.jdbc.entity.ElasticDispatcherWorker" id="elasticDispatcherWorker">
        <id column="worker_id" property="workerId"/>
        <result column="worker_name" property="workerName"/>
        <result column="max_threads" property="maxThreads"/>
        <result column="current_threads" property="currentThreads"/>
    </resultMap>

    <select id="count" parameterType="com.github.mybatisq.Query" resultType="java.lang.Integer">
        select count(*) <include refid="com.github.richterplus.elastic.dispatcher.jdbc.mapper.QMapper.countFrom"/>
    </select>

    <select id="select" parameterType="com.github.mybatisq.Query" resultMap="elasticDispatcherWorker">
        select <if test="selectedColumns.size > 0"><foreach collection="selectedColumns" item="col" separator=",">${tableAlias}.`${col.name}`</foreach></if><if test="selectedColumns.size == 0">${tableAlias}.`worker_id`,${tableAlias}.`worker_name`,${tableAlias}.`max_threads`,${tableAlias}.`current_threads`</if> <include refid="com.github.richterplus.elastic.dispatcher.jdbc.mapper.QMapper.selectFrom"/>
    </select>

    <insert id="insert" parameterType="com.github.richterplus.elastic.dispatcher.jdbc.entity.ElasticDispatcherWorker" useGeneratedKeys="true" keyProperty="workerId">
        <trim prefix="insert `elastic_dispatcher_worker` (" suffix=")" suffixOverrides=",">
            <if test="workerId != null">`worker_id`,</if>
            <if test="workerName != null">`worker_name`,</if>
            <if test="maxThreads != null">`max_threads`,</if>
            <if test="currentThreads != null">`current_threads`,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="workerId != null">#{workerId},</if>
            <if test="workerName != null">#{workerName},</if>
            <if test="maxThreads != null">#{maxThreads},</if>
            <if test="currentThreads != null">#{currentThreads},</if>
        </trim>
    </insert>

    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="workerId">
        <trim prefix="insert `elastic_dispatcher_worker` (`worker_name`,`max_threads`,`current_threads`) values ">
            <foreach collection="list" item="item" separator=",">
                (#{item.workerName},#{item.maxThreads},#{item.currentThreads})
            </foreach>
        </trim>
    </insert>

    <update id="update" parameterType="com.github.richterplus.elastic.dispatcher.jdbc.entity.ElasticDispatcherWorker">
        <trim prefix="update `elastic_dispatcher_worker` set" suffix="where `worker_id`=#{workerId}" suffixOverrides=",">
            <if test="workerName != null">`worker_name`=#{workerName},</if>
            <if test="maxThreads != null">`max_threads`=#{maxThreads},</if>
            <if test="currentThreads != null">`current_threads`=#{currentThreads},</if>
        </trim>
    </update>

    <update id="batchUpdate">
        <foreach collection="list" item="item" separator=";">
            <trim prefix="update `elastic_dispatcher_worker` set" suffix="where `worker_id`=#{item.workerId}" suffixOverrides=",">
                <if test="item.workerName != null">`worker_name`=#{item.workerName},</if>
                <if test="item.maxThreads != null">`max_threads`=#{item.maxThreads},</if>
                <if test="item.currentThreads != null">`current_threads`=#{item.currentThreads},</if>
            </trim>
        </foreach>
    </update>

    <update id="batchUpdateByCase">
        <trim prefix="update `elastic_dispatcher_worker` set" suffixOverrides=",">
            <foreach collection="entityList" item="item" open="`worker_name`=case `worker_id` " close=" end," separator=" ">when #{item.workerId} then #{workerName}</foreach>
            <foreach collection="entityList" item="item" open="`max_threads`=case `worker_id` " close=" end," separator=" ">when #{item.workerId} then #{maxThreads}</foreach>
            <foreach collection="entityList" item="item" open="`current_threads`=case `worker_id` " close=" end," separator=" ">when #{item.workerId} then #{currentThreads}</foreach>
        </trim>
        <foreach collection="list" item="item" open="where `worker_id` in (" close=")" separator=",">#{item.workerId}</foreach>
    </update>

    <delete id="delete">
        delete from `elastic_dispatcher_worker` where worker_id=#{workerId}
    </delete>

    <delete id="batchDelete">
        <trim prefix="delete from `elastic_dispatcher_worker` where `worker_id` in (" suffix=")"><foreach collection="workerIdList" separator="," item="item">#{item}</foreach></trim>
    </delete>

    <delete id="deleteByQuery" parameterType="com.github.mybatisq.DeleteQuery">
        <trim prefix="delete from `elastic_dispatcher_worker`"><include refid="com.github.richterplus.elastic.dispatcher.jdbc.mapper.QMapper.deleteWhere"/></trim>
    </delete>
</mapper>